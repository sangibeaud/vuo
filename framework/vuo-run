#!/bin/bash

set -e

VUO_RUN_DIR=$(dirname $0)
VUO_COMPILE=vuo-compile
if [ -x 'framework/vuo-compile' ]; then
	VUO_FRAMEWORK_PATH='framework'
elif [ -x '../build/bin/vuo-compile' ]; then
	VUO_FRAMEWORK_PATH='../build/bin'
	VUO_COMPILE=vuo-compile-for-framework
elif [ -x '../framework/vuo-compile' ]; then
	VUO_FRAMEWORK_PATH='../framework'
elif [ -x '../../framework/vuo-compile' ]; then
	VUO_FRAMEWORK_PATH='../../framework'
elif [ -x '../../../framework/vuo-compile' ]; then
	VUO_FRAMEWORK_PATH='../../../framework'
elif [ -x "$VUO_RUN_DIR/vuo-compile" ]; then
	VUO_FRAMEWORK_PATH="$VUO_RUN_DIR"
else
	echo "Error: Couldn't find vuo-compile."
	exit
fi

REPEAT=1
declare -a COMPOSITIONS
for argument do
	case "$argument" in
		--stop-after=*)
			STOP_AFTER="${argument#*=}"
		;;

		--repeat=*)
			REPEAT="${argument#*=}"
		;;

		--lldb)
			LLDB=lldb
		;;

		--verbose)
			VERBOSE=--verbose
		;;

		*)
			COMPOSITIONS+=("$argument")
		;;
	esac
done
if [ -n "$STOP_AFTER" -a -n "$LLDB" ]; then
	echo "error: Can't use both --stop-after and --lldb at the same time."
	exit 1
fi

for i in $(seq 1 $REPEAT); do
	if [ $REPEAT -gt 1 ]; then
		echo "$i"
	fi

for filename in "${COMPOSITIONS[@]}"; do
	if [ ${#COMPOSITIONS[@]} -gt 1 ]; then
		echo "$filename"
	fi

	COMPOSITION_WITHOUT_EXTENSION="${filename/.vuo/}"
	COMPOSITION_BASENAME="$(basename "$COMPOSITION_WITHOUT_EXTENSION")"

	if [ ! -f "$COMPOSITION_WITHOUT_EXTENSION.vuo" ]; then
		echo "Error: $COMPOSITION_WITHOUT_EXTENSION.vuo: Composition not found"
		exit 1
	fi

	COMPOSITION_COMPILED="/tmp/$COMPOSITION_BASENAME.bc"
	$VUO_FRAMEWORK_PATH/$VUO_COMPILE $VERBOSE "$COMPOSITION_WITHOUT_EXTENSION.vuo" --output="$COMPOSITION_COMPILED"
	if [ ! -f "$COMPOSITION_COMPILED" ]; then
		echo "Error: $COMPOSITION_WITHOUT_EXTENSION.vuo: Compilation failed"
		exit 1
	fi
	
	COMPOSITION_LINKED="/tmp/$COMPOSITION_BASENAME"
	# During development, small-binary is typically faster since it doesn't need to wait for _everything_ to be linked.
	$VUO_FRAMEWORK_PATH/vuo-link --optimization small-binary $VERBOSE "$COMPOSITION_COMPILED" --output="$COMPOSITION_LINKED"
#	$VUO_FRAMEWORK_PATH/vuo-link --optimization fast-build "$COMPOSITION_COMPILED" --output="$COMPOSITION_LINKED"
	if [ ! -f "$COMPOSITION_LINKED" ]; then
		echo "Error: $COMPOSITION_WITHOUT_EXTENSION.vuo: Linking failed"
		exit 1
	fi

	pushd . > /dev/null
	cd "$(dirname "$filename")"
	if [ -z "$STOP_AFTER" ]; then
		$LLDB "$COMPOSITION_LINKED"
	else
		"$COMPOSITION_LINKED" &
		sleep "$STOP_AFTER"
		# echo "    Stoppingâ€¦"
		pkill "$COMPOSITION_BASENAME"
		wait
		# echo "    Stopped."
	fi
	popd > /dev/null
done
done
